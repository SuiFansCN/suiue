import{_ as e,u as a,q as t,ao as l}from"./chunks/framework.B-vsaDWh.js";const b=JSON.parse('{"title":"WalletState","description":"","frontmatter":{},"headers":[],"relativePath":"reference/wallet-state.md","filePath":"reference/wallet-state.md"}'),o={name:"reference/wallet-state.md"},c=l('<h1 id="walletstate" tabindex="-1">WalletState <a class="header-anchor" href="#walletstate" aria-label="Permalink to &quot;WalletState&quot;">​</a></h1><p>wallet-state 封装了与钱包状态相关的信息。</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="wallet" tabindex="-1">wallet <a class="header-anchor" href="#wallet" aria-label="Permalink to &quot;wallet&quot;">​</a></h3><ul><li>类型：<code>Computed&lt;@mysten/wallet-standard.wallet&gt;</code></li></ul><p>记录目前已经连接的钱包对象，如果没有连接钱包，则为 <code>undefined</code>。</p><h3 id="wallets" tabindex="-1">wallets <a class="header-anchor" href="#wallets" aria-label="Permalink to &quot;wallets&quot;">​</a></h3><ul><li>类型：<code>Computed&lt;@mysten/wallet-standard.wallet[]&gt;</code></li></ul><p>记录所有符合标准的钱包对象，主要根据 <code>requiredFeatures</code> 和 <code>preferredWallets</code> 进行过滤，详见 <code>SuiueProvider</code> 的 <a href="./components#suiueprovider">配置</a>。</p><h3 id="account" tabindex="-1">account <a class="header-anchor" href="#account" aria-label="Permalink to &quot;account&quot;">​</a></h3><ul><li>类型：<code>Computed&lt;@mysten/wallet-standard.ReadonlyAccount&gt;</code></li></ul><p>目前已经连接的钱包的账户信息，如果没有连接钱包，则为 <code>undefined</code>。</p><h3 id="address" tabindex="-1">address <a class="header-anchor" href="#address" aria-label="Permalink to &quot;address&quot;">​</a></h3><ul><li>类型：<code>Computed&lt;string&gt;</code></li></ul><p>目前已经连接的钱包的地址，如果没有连接钱包，则为 <code>undefined</code>。</p><h3 id="isconnected" tabindex="-1">isConnected <a class="header-anchor" href="#isconnected" aria-label="Permalink to &quot;isConnected&quot;">​</a></h3><ul><li>类型：<code>Computed&lt;boolean&gt;</code></li></ul><p>是否已经连接钱包。</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="async-connect" tabindex="-1">async connect() <a class="header-anchor" href="#async-connect" aria-label="Permalink to &quot;async connect()&quot;">​</a></h3><ul><li><p>参数：</p><ul><li><code>target: @mysten/wallet-standard.wallet</code></li></ul><p>可以从 this.wallets 中获取。</p><ul><li><code>preferredAddress?: string</code></li></ul><p>如果钱包提供了多个地址，优先选择此地址连接，如果使用了 auto-connect，则不必理会这个参数，将会自动处理。</p></li></ul><p>连接钱包，如果被连接的钱包没有返回账户信息，则会抛出 <code>WalletAccountNotFoundError</code>(Sui Wallet 在localhost好像会出现这个问题)；如果连接失败，则会抛出钱包插件本身抛出的错误。</p><h3 id="async-disconnect" tabindex="-1">async disconnect() <a class="header-anchor" href="#async-disconnect" aria-label="Permalink to &quot;async disconnect()&quot;">​</a></h3><ul><li>参数：无</li></ul><p>断开钱包连接。有一些钱包插件没有断开连接的功能，将会忽略，只将状态设置为未连接。</p><h3 id="onconnect-callback-void" tabindex="-1">onConnect(callback: () =&gt; void) <a class="header-anchor" href="#onconnect-callback-void" aria-label="Permalink to &quot;onConnect(callback: () =&gt; void)&quot;">​</a></h3><ul><li>参数： <ul><li><code>callback: () =&gt; void</code></li></ul></li><li>返回值：<code>() =&gt; void</code></li></ul><p>注册一个回调函数，当钱包连接成功时，将会调用这个函数。返回一个函数，调用这个函数将会取消这个回调。</p>',28),d=[c];function n(r,i,s,u,h,p){return t(),a("div",null,d)}const f=e(o,[["render",n]]);export{b as __pageData,f as default};
