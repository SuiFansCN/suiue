import{_ as s,u as a,q as i,ao as t}from"./chunks/framework.Cxslqp1f.js";const y=JSON.parse('{"title":"WalletAction","description":"","frontmatter":{},"headers":[],"relativePath":"en_US/reference/wallet-action.md","filePath":"en_US/reference/wallet-action.md"}'),n={name:"en_US/reference/wallet-action.md"},e=t(`<h1 id="walletaction" tabindex="-1">WalletAction <a class="header-anchor" href="#walletaction" aria-label="Permalink to &quot;WalletAction&quot;">​</a></h1><p>This API is used to perform wallet operations such as signing transactions, signing messages, etc.</p><p>Most of the types here come from <code>@mysten/wallet-standard</code>. If you can&#39;t find the type definition you need in <code>suiue</code>, you can check <a href="https://docs.sui.io/standards/wallet-standard" target="_blank" rel="noreferrer"><code>@mysten/wallet-standard</code></a>, or its <a href="https://github.com/MystenLabs/sui/tree/main/sdk/wallet-standard" target="_blank" rel="noreferrer"> repo</a>.</p><h2 id="methods" tabindex="-1">methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;methods&quot;">​</a></h2><h3 id="signandexecutetransactionblock" tabindex="-1">signAndExecuteTransactionBlock <a class="header-anchor" href="#signandexecutetransactionblock" aria-label="Permalink to &quot;signAndExecuteTransactionBlock&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> signAndExecuteTransactionBlock</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    txb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TransactionBlock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SuiTransactionBlockResponseOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    requestType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteTransactionRequestType</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SuiSignAndExecuteTransactionBlockOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Call the wallet plug-in to sign and execute the transaction block and return the execution result.</p><h3 id="signtransactionblock-txb-transactionblock" tabindex="-1">signTransactionBlock(txb: TransactionBlock) <a class="header-anchor" href="#signtransactionblock-txb-transactionblock" aria-label="Permalink to &quot;signTransactionBlock(txb: TransactionBlock)&quot;">​</a></h3><p>Call the wallet plug-in to sign without executing the transaction block and return the signed result.</p><h3 id="signpersonalmessage-message-string-uint8array" tabindex="-1">signPersonalMessage(message: string | Uint8Array) <a class="header-anchor" href="#signpersonalmessage-message-string-uint8array" aria-label="Permalink to &quot;signPersonalMessage(message: string | Uint8Array)&quot;">​</a></h3><p>Call the wallet plug-in to sign the message and return the signed result.</p><h3 id="signmessage-message-string-uint8array" tabindex="-1">signMessage(message: string | Uint8Array) <a class="header-anchor" href="#signmessage-message-string-uint8array" aria-label="Permalink to &quot;signMessage(message: string | Uint8Array)&quot;">​</a></h3><p>The old version of signPersonalMessage, it is recommended to use signPersonalMessage.</p><h3 id="getexactlycoinamount" tabindex="-1">getExactlyCoinAmount <a class="header-anchor" href="#getexactlycoinamount" aria-label="Permalink to &quot;getExactlyCoinAmount&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {TransactionResult, TransactionBlock} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@mysten/sui.js/transaction&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getExactlyCoinAmount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        txb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TransactionBlock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        coinType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SuiTypeIdentifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        amt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bigint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransactionResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Get the exact <code>COIN</code> amount, for example, if you want to transfer 5 SUI, then you can use this method to get exactly 5 SUI, no matter that how many SUI-COIN-OBJECTS you have. If the balance is insufficient, an <code>InsufficientBalanceError</code> will be thrown. The calculation of balance relies on <code>WalletQuery</code>.</p>`,16),l=[e];function h(r,p,o,k,c,d){return i(),a("div",null,l)}const u=s(n,[["render",h]]);export{y as __pageData,u as default};
