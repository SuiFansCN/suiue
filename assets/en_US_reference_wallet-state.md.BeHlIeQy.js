import{_ as e,u as t,q as a,ao as l}from"./chunks/framework.B-vsaDWh.js";const w=JSON.parse('{"title":"WalletState","description":"","frontmatter":{},"headers":[],"relativePath":"en_US/reference/wallet-state.md","filePath":"en_US/reference/wallet-state.md"}'),o={name:"en_US/reference/wallet-state.md"},n=l('<h1 id="walletstate" tabindex="-1">WalletState <a class="header-anchor" href="#walletstate" aria-label="Permalink to &quot;WalletState&quot;">​</a></h1><p>WalletState encapsulates information related to the wallet state.</p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="wallet" tabindex="-1">wallet <a class="header-anchor" href="#wallet" aria-label="Permalink to &quot;wallet&quot;">​</a></h3><ul><li>Type: <code>Computed&lt;@mysten/wallet-standard.wallet&gt;</code></li></ul><p>Records the currently connected wallet object. If no wallet is connected, it is <code>undefined</code>.</p><h3 id="wallets" tabindex="-1">wallets <a class="header-anchor" href="#wallets" aria-label="Permalink to &quot;wallets&quot;">​</a></h3><ul><li>Type: <code>Computed&lt;@mysten/wallet-standard.wallet[]&gt;</code></li></ul><p>Records all standard-compliant wallet objects, mainly filtered according to <code>requiredFeatures</code> and <code>preferredWallets</code>. See the <a href="./components#suiueprovider">configuration</a> of <code>SuiueProvider</code>.</p><h3 id="account" tabindex="-1">account <a class="header-anchor" href="#account" aria-label="Permalink to &quot;account&quot;">​</a></h3><ul><li>Type: <code>Computed&lt;@mysten/wallet-standard.ReadonlyAccount&gt;</code></li></ul><p>The account information of the currently connected wallet. If no wallet is connected, it is <code>undefined</code>.</p><h3 id="address" tabindex="-1">address <a class="header-anchor" href="#address" aria-label="Permalink to &quot;address&quot;">​</a></h3><ul><li>Type: <code>Computed&lt;string&gt;</code></li></ul><p>The address of the currently connected wallet. If no wallet is connected, it is <code>undefined</code>.</p><h3 id="isconnected" tabindex="-1">isConnected <a class="header-anchor" href="#isconnected" aria-label="Permalink to &quot;isConnected&quot;">​</a></h3><ul><li>Type: <code>Computed&lt;boolean&gt;</code></li></ul><p>Whether the wallet is connected.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="async-connect" tabindex="-1">async connect() <a class="header-anchor" href="#async-connect" aria-label="Permalink to &quot;async connect()&quot;">​</a></h3><ul><li>Parameters: <ul><li><p><code>target: @mysten/wallet-standard.wallet</code></p><p>Can be obtained from this.wallets.</p></li><li><p><code>preferredAddress?: string</code></p><p>If the wallet provides multiple addresses, prefer to connect to this address. If auto-connect is used, you don&#39;t need to worry about this parameter, it will be handled automatically.</p></li></ul></li></ul><p>Connects the wallet. If the connected wallet does not return account information, it will throw <code>WalletAccountNotFoundError</code> (Sui Wallet seems to have this problem on localhost); if the connection fails, it will throw the error thrown by the wallet plugin itself.</p><h3 id="async-disconnect" tabindex="-1">async disconnect() <a class="header-anchor" href="#async-disconnect" aria-label="Permalink to &quot;async disconnect()&quot;">​</a></h3><ul><li>Parameters: None</li></ul><p>Disconnects the wallet connection. Some wallet plugins do not have the function of disconnecting, they will be ignored, and the status will be set to disconnected.</p><h3 id="onconnect-callback-void" tabindex="-1">onConnect(callback: () =&gt; void) <a class="header-anchor" href="#onconnect-callback-void" aria-label="Permalink to &quot;onConnect(callback: () =&gt; void)&quot;">​</a></h3><ul><li>Parameters: <ul><li><code>callback: () =&gt; void</code></li></ul></li><li>Return value: <code>() =&gt; void</code></li></ul><p>Registers a callback function. When the wallet is successfully connected, this function will be called. Returns a function, calling this function will cancel this callback.</p>',28),c=[n];function i(d,r,s,h,u,p){return a(),t("div",null,c)}const m=e(o,[["render",i]]);export{w as __pageData,m as default};
